@model Dominio.Entidad.Negocio.Entidad.Producto

@{
    ViewBag.Title = "Actualizar Producto";
}

<div class="container mt-4">
    <h2 class="mb-4 text-primary">Actualizar Producto</h2>

    @if (ViewBag.mensaje != null)
    {
        <div class="alert alert-info">@ViewBag.mensaje</div>
    }

    <div class="card shadow-sm border-0">
        <div class="card-body">
            @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                @Html.HiddenFor(model => model.codigo)

                <div class="mb-3">
                    @Html.LabelFor(model => model.codigo, new { @class = "form-label" })
                    @Html.EditorFor(model => model.codigo, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.codigo, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.nombre, new { @class = "form-label" })
                    @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.codCategoria, new { @class = "form-label" })
                    @Html.DropDownList("codCategoria", (SelectList)ViewBag.Categorias, "Seleccione", new { @class = "form-select" })
                    @Html.ValidationMessageFor(model => model.codCategoria, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.stock, new { @class = "form-label" })
                    @Html.EditorFor(model => model.stock, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.stock, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.precio, new { @class = "form-label" })
                    @Html.EditorFor(model => model.precio, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.precio, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.descripcion, new { @class = "form-label" })
                    @Html.EditorFor(model => model.descripcion, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.descripcion, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.codProveedor, new { @class = "form-label" })
                    @Html.DropDownList("codProveedor", (SelectList)ViewBag.Proveedores, "Seleccione", new { @class = "form-select" })
                    @Html.ValidationMessageFor(model => model.codProveedor, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.foto, new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.foto, new { type = "file", @class = "form-control", accept = "image/*" })
                    @Html.ValidationMessageFor(model => model.foto, "", new { @class = "text-danger" })

                    @if (!string.IsNullOrEmpty(Model.fotoRuta))
                    {
                        <div class="mt-2">
                            <label class="form-label">Imagen actual:</label><br />
                            <img src="@Url.Content(Model.fotoRuta)" alt="Imagen actual" style="max-height: 150px;" class="img-thumbnail" />
                        </div>
                    }
                </div>

                <div class="d-flex justify-content-between mt-4">
                    <input type="submit" value="Guardar Cambios" class="btn btn-primary" />
                    @Html.ActionLink("Volver a Mantenimiento Productos", "MantLstProductos", null, new { @class = "btn btn-outline-secondary" })
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
